version: '3.8'

services:
  # Database
  postgres:
    image: pgvector/pgvector:pg15
    container_name: phoenix_postgres
    environment:
      POSTGRES_DB: phoenix_rise
      POSTGRES_USER: phoenix
      POSTGRES_PASSWORD: phoenix_dev_2025
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - phoenix_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U phoenix -d phoenix_rise"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7.2-alpine
    container_name: phoenix_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - phoenix_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Mailhog for local email testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: phoenix_mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - phoenix_network

  # FastAPI Backend
  api:
    build: 
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: phoenix_api
    env_file: ./.env
    environment:
      DATABASE_URL: postgresql+asyncpg://phoenix:phoenix_dev_2025@postgres:5432/phoenix_rise
      REDIS_URL: redis://redis:6379
      SECRET_KEY: phoenix_rise_super_secret_key_2025_development_only
      DEBUG: "true"
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - phoenix_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Next.js Frontend
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: phoenix_web
    env_file: ./.env
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - phoenix_network

  # Celery worker for background tasks
  worker:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: phoenix_worker
    command: celery -A app.core.celery worker --loglevel=info --concurrency=2
    environment:
      DATABASE_URL: postgresql+asyncpg://phoenix:phoenix_dev_2025@postgres:5432/phoenix_rise
      REDIS_URL: redis://redis:6379
      SECRET_KEY: phoenix_rise_super_secret_key_2025_development_only
      DEBUG: "true"
    volumes:
      - ./apps/api:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - phoenix_network

volumes:
  postgres_data:
  redis_data:

networks:
  phoenix_network:
    driver: bridge