[tool.poetry]
name = "phoenix-ecosystem"
version = "3.0.0"
description = "Phoenix Ecosystem - Monorepo unifi√© pour applications IA de reconversion professionnelle"
authors = ["Phoenix Team <hello@phoenix-ecosystem.com>"]
readme = "README.md"
package-mode = false # Monorepo workspace

# ======================================================
# D√âPENDANCES CORE - PARTAG√âES PAR TOUT L'√âCOSYST√àME
# ======================================================

[tool.poetry.dependencies]
python = ">=3.9,<3.12"

# üõ°Ô∏è S√©curit√© Core (OBLIGATOIRE Contrat V5)
cryptography = ">=41.0.0"
bcrypt = ">=4.0.0"
passlib = {extras = ["bcrypt"], version = ">=1.7.4"}
bleach = ">=6.0.0"
marshmallow = ">=3.20.0"

# üì° HTTP & Validation
requests = ">=2.31.0"
python-multipart = ">=0.0.12"  # CVE-2024-53891 fix
pydantic = ">=2.5.0"

# ‚öôÔ∏è Configuration
python-dotenv = ">=1.0.0"
python-dateutil = ">=2.8.2"

# üóÑÔ∏è Base de donn√©es (Services partag√©s V5)
supabase = ">=2.0.0"

# üí≥ Paiement (Contrat V5)
stripe = ">=8.0.0"

# üîß Build & Security (CVE fixes)
setuptools = ">=75.0.0"  # CVE-2024-6345 & CVE-2024-7079
wheel = ">=0.40.0"

# üì¶ Phoenix Packages Partag√©s (Contrat V5)
phoenix-shared-auth = { path = "packages/phoenix-shared-auth", develop = true }
phoenix-shared-db = { path = "packages/phoenix-shared-db", develop = true }
phoenix_event_bridge = { path = "packages/phoenix_event_bridge", develop = true }
phoenix-shared-models = { path = "packages/phoenix-shared-models", develop = true }
phoenix_shared_auth = { path = "packages/phoenix_shared_auth", develop = true }

# ======================================================
# GROUPES DE D√âPENDANCES PAR APPLICATION
# ======================================================

[tool.poetry.group.letters]
optional = true

[tool.poetry.group.letters.dependencies]
streamlit = ">=1.30.0"
google-generativeai = ">=0.3.2"
tenacity = ">=8.2.0"
plotly = ">=5.0.0"
pandas = ">=1.5.0"
PyJWT = ">=2.8.0"
structlog = ">=23.2.0"
cachetools = ">=5.3.0"

[tool.poetry.group.cv]
optional = true

[tool.poetry.group.cv.dependencies] 
streamlit = ">=1.30.0"
google-generativeai = ">=0.3.2"
PyPDF2 = ">=3.0.0"
PyMuPDF = ">=1.24.1"
python-docx = ">=1.1.0"
pytesseract = ">=0.3.10"
Pillow = ">=10.3.0"
structlog = ">=23.2.0"
cachetools = ">=5.3.0"

[tool.poetry.group.dev.dependencies]
# üîç Linting & Formatting (Contrat V5)
ruff = ">=0.1.8"
black = ">=23.11.0"
isort = ">=5.12.0"

# üß™ Testing (Contrat V5)
pytest = ">=7.4.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"
pytest-mock = ">=3.12.0"

# üîß Pre-commit & Git hooks
pre-commit = ">=3.6.0"

# üìä Monitoring & Debugging
mypy = ">=1.11.0"
pytz = ">=2024.1"

# ======================================================
# CONFIGURATION BUILD & QUALIT√â (Contrat V5)
# ======================================================

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.git
  | \.pytest_cache
  | \.ruff_cache
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = [
    "apps/phoenix-letters/tests",
    "apps/phoenix-cv/tests",
    "packages/*/tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]