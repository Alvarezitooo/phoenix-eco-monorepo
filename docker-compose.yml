# üê≥ Phoenix Ecosystem - Docker Compose Stack
# DevSecOps compliant avec monitoring et logs centralis√©s

version: '3.8'

services:
  # =======================================
  # üß† AGENTS IA - SERVICE PRINCIPAL
  # =======================================
  phoenix-agents:
    build:
      context: ./agent_ia
      dockerfile: Dockerfile
    container_name: phoenix-agents
    ports:
      - "8001:8001"
    environment:
      - OLLAMA_HOST=ollama:11434
      - LOG_LEVEL=INFO
      - PROMETHEUS_PORT=9090
    volumes:
      - ./agent_ia:/app
      - agent_logs:/app/logs
    networks:
      - phoenix-network
    depends_on:
      - ollama
      - prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =======================================
  # üåê TUNNEL CLOUDFLARE PERMANENT
  # =======================================
  phoenix-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: phoenix-tunnel
    command: tunnel --config /etc/cloudflared/config.yml run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    volumes:
      - ./tunnel/config:/etc/cloudflared
      - tunnel_logs:/var/log/cloudflared
    networks:
      - phoenix-network
    depends_on:
      - phoenix-agents
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://phoenix-agents:8001/health"]
      interval: 60s
      timeout: 10s
      retries: 3

  # =======================================
  # ü§ñ OLLAMA - MOD√àLES IA LOCAUX
  # =======================================
  ollama:
    image: ollama/ollama:latest
    container_name: phoenix-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./agent_ia/models:/models
    networks:
      - phoenix-network
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_NUM_PARALLEL=2
      - OLLAMA_MAX_LOADED_MODELS=2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =======================================
  # üìä PHOENIX LETTERS - APP PRINCIPALE
  # =======================================
  phoenix-letters:
    build:
      context: ./apps/phoenix-letters
      dockerfile: Dockerfile
    container_name: phoenix-letters
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - AGENTS_API_URL=http://phoenix-agents:8001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    volumes:
      - ./apps/phoenix-letters:/app
      - letters_data:/app/data
    networks:
      - phoenix-network
    depends_on:
      - phoenix-agents
    restart: unless-stopped

  # =======================================
  # üìÑ PHOENIX CV - G√âN√âRATEUR CV
  # =======================================
  phoenix-cv:
    build:
      context: ./apps/phoenix-cv
      dockerfile: Dockerfile
    container_name: phoenix-cv
    ports:
      - "8502:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - AGENTS_API_URL=http://phoenix-agents:8001
    volumes:
      - ./apps/phoenix-cv:/app
    networks:
      - phoenix-network
    depends_on:
      - phoenix-agents
    restart: unless-stopped

  # =======================================
  # üåÖ PHOENIX RISE - COACHING MENTAL
  # =======================================
  phoenix-rise:
    build:
      context: ./apps/phoenix-rise
      dockerfile: Dockerfile
    container_name: phoenix-rise
    ports:
      - "8503:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - AGENTS_API_URL=http://phoenix-agents:8001
    volumes:
      - ./apps/phoenix-rise:/app
    networks:
      - phoenix-network
    depends_on:
      - phoenix-agents
    restart: unless-stopped

  # =======================================
  # üåÖ PHOENIX AUBE - EXPLORATION CARRI√àRE
  # =======================================
  phoenix-aube:
    build:
      context: ./apps/phoenix-aube
      dockerfile: Dockerfile
    container_name: phoenix-aube
    ports:
      - "8504:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - AGENTS_API_URL=http://phoenix-agents:8001
      - EU_COMPLIANCE_MODE=true
    volumes:
      - ./apps/phoenix-aube:/app
      - aube_explorations:/app/explorations
    networks:
      - phoenix-network
    depends_on:
      - phoenix-agents
    restart: unless-stopped

  # =======================================
  # üìä MONITORING - PROMETHEUS
  # =======================================
  prometheus:
    image: prom/prometheus:latest
    container_name: phoenix-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - phoenix-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # =======================================
  # üìä LOGS - GRAFANA LOKI
  # =======================================
  loki:
    image: grafana/loki:latest
    container_name: phoenix-loki
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml
    networks:
      - phoenix-network
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  # =======================================
  # üé® DASHBOARD - GRAFANA
  # =======================================
  grafana:
    image: grafana/grafana:latest
    container_name: phoenix-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=phoenix123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - phoenix-network
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped

  # =======================================
  # üîí REVERSE PROXY - NGINX
  # =======================================
  nginx:
    image: nginx:alpine
    container_name: phoenix-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - phoenix-network
    depends_on:
      - phoenix-letters
      - phoenix-cv
      - phoenix-rise
      - phoenix-agents
      - grafana
    restart: unless-stopped

# =======================================
# üì¶ VOLUMES PERSISTANTS
# =======================================
volumes:
  ollama_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  loki_data:
    driver: local
  agent_logs:
    driver: local
  letters_data:
    driver: local
  nginx_logs:
    driver: local
  aube_explorations:
    driver: local
  tunnel_logs:
    driver: local

# =======================================
# üåê R√âSEAU PHOENIX
# =======================================
networks:
  phoenix-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16