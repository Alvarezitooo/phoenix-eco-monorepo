# ===================================================================
# PHOENIX ECOSYSTEM - INFRASTRUCTURE BLUEPRINT V1.0
# ===================================================================
# Ce fichier est la source de vérité pour toute l'infrastructure
# de l'écosystème Phoenix sur Render.
# Mainteneur: Matthieu Rubia

# Active la création d'un environnement de test pour chaque Pull Request.
previews: true

services:
  # --- APPLICATIONS UTILISATEUR (WEB SERVICES) -----------------------
  
  - type: web
    name: phoenix-letters
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "streamlit run ./apps/phoenix-letters/main.py --server.port 80 --server.address=0.0.0.0"
    healthCheckPath: /_stcore/health
    autoDeploy: true
    paths:
      - "apps/phoenix-letters/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-cv
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "streamlit run ./apps/phoenix-cv/main.py --server.port 80 --server.address=0.0.0.0"
    healthCheckPath: /_stcore/health
    autoDeploy: true
    paths:
      - "apps/phoenix-cv/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-backend-unified
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/phoenix-backend-unified/app.py"
    healthCheckPath: /health
    autoDeploy: true
    paths:
      - "apps/phoenix-backend-unified/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: ALLOWED_ORIGINS
        value: "https://phoenix-aube.vercel.app,https://phoenix-rise.vercel.app"
      - key: ENVIRONMENT
        value: "production"

  - type: web
    name: phoenix-iris-api
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/phoenix-iris-api/main.py"
    healthCheckPath: /health
    autoDeploy: true
    paths:
      - "apps/phoenix-iris-api/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-agents-ai
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/agent_ia/main.py"
    healthCheckPath: /health
    autoDeploy: true
    paths:
      - "apps/agent_ia/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: MAX_RESPONSE_TIME
        value: "30"
      - key: ENABLE_CLOUD_FALLBACK
        value: "true"

  # --- SERVICES BACKEND (WORKERS) -----------------------------------
  
  - type: worker
    name: phoenix-event-bridge
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./infrastructure/data-pipeline/app.py"
    autoDeploy: true
    paths:
      - "infrastructure/data-pipeline/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: WORKER_TYPE
        value: "event_bridge"
      - key: ENABLE_EVENT_PROCESSING
        value: "true"

  - type: worker
    name: phoenix-user-profile
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./infrastructure/data-pipeline/app.py"
    autoDeploy: true
    paths:
      - "infrastructure/data-pipeline/**"
      - "packages/**"
    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: WORKER_TYPE
        value: "user_profile"

  # --- INFRASTRUCTURE (BASE DE DONNÉES) ------------------------------
  
databases:
  - name: phoenix-db
    plan: starter

# NOTE: Le site vitrine (phoenix-website) n'est pas inclus ici car il est
# stratégiquement hébergé sur Vercel pour des performances optimales avec Next.js.

