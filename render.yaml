# ===================================================================
# PHOENIX ECOSYSTEM - INFRASTRUCTURE BLUEPRINT V1.2 (SYNTAXE VALIDÉE)
# ===================================================================

# Active la création d'environnements de test pour chaque Pull Request.
# Source: Render Preview Environments Documentation
previewsEnabled: true

services:
  # --- APPLICATIONS UTILISATEUR (WEB SERVICES) -----------------------

  - type: web
    name: phoenix-letters
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "streamlit run ./apps/phoenix-letters/main.py --server.port 80 --server.address=0.0.0.0"
    healthCheckPath: /_stcore/health
    
    # 'autoDeploy' est un simple booléen.
    autoDeploy: true
    # 'paths' est une directive séparée qui filtre les déclenchements de l'autoDeploy.
    # Source: Render Monorepo Support Documentation
    paths:
      - "apps/phoenix-letters/**"
      - "packages/**"
      
    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-cv
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "streamlit run ./apps/phoenix-cv/main.py --server.port 80 --server.address=0.0.0.0"
    healthCheckPath: /_stcore/health
    
    autoDeploy: true
    paths:
      - "apps/phoenix-cv/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-backend-unified
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/phoenix-backend-unified/app.py"
    healthCheckPath: /health
    
    autoDeploy: true
    paths:
      - "apps/phoenix-backend-unified/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: ALLOWED_ORIGINS
        value: "https://phoenix-aube.vercel.app,https://phoenix-rise.vercel.app"
      - key: ENVIRONMENT
        value: "production"

  - type: web
    name: phoenix-iris-api
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/phoenix-iris-api/main.py"
    healthCheckPath: /health
    
    autoDeploy: true
    paths:
      - "apps/phoenix-iris-api/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets

  - type: web
    name: phoenix-agents-ai
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./apps/agent_ia/main.py"
    healthCheckPath: /health
    
    autoDeploy: true
    paths:
      - "apps/agent_ia/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: MAX_RESPONSE_TIME
        value: "30"
      - key: ENABLE_CLOUD_FALLBACK
        value: "true"

  # --- SERVICES BACKEND (WORKERS) -----------------------------------
  
  - type: worker
    name: phoenix-event-bridge
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./infrastructure/data-pipeline/app.py"
    
    autoDeploy: true
    paths:
      - "infrastructure/data-pipeline/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: WORKER_TYPE
        value: "event_bridge"
      - key: ENABLE_EVENT_PROCESSING
        value: "true"

  - type: worker
    name: phoenix-user-profile
    env: docker
    plan: starter
    dockerfilePath: ./Dockerfile
    dockerCommand: "python ./infrastructure/data-pipeline/app.py"
    
    autoDeploy: true
    paths:
      - "infrastructure/data-pipeline/**"
      - "packages/**"

    envVars:
      - fromSecretGroup: phoenix-secrets
      - key: WORKER_TYPE
        value: "user_profile"

  # --- INFRASTRUCTURE (BASE DE DONNÉES) ------------------------------
  
  - type: pserv
    name: phoenix-db
    env: postgres
    plan: starter
    postgresMajorVersion: 15

