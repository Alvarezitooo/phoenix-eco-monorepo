# üöÄ Phoenix Ecosystem - Configuration Render COMPL√àTE
# Architecture Monorepo avec Web Services + Background Workers + APIs

services:
  # ===========================================
  # WEB SERVICES (Applications utilisateurs)
  # ===========================================
  
  # Service 1: Phoenix Letters - G√©n√©rateur de lettres IA
  - type: web
    name: phoenix-letters
    env: docker
    dockerfilePath: ./Dockerfile
    dockerBuildArgs:
      - APP_NAME=phoenix-letters
    plan: starter
    envVars:
      # Variables critiques (√† configurer dans Render Dashboard)
      - key: GOOGLE_API_KEY
        sync: false
      - key: SUPABASE_URL
        sync: false
      - key: SUPABASE_ANON_KEY
        sync: false
      - key: SUPABASE_SERVICE_ROLE_KEY
        sync: false
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: JWT_SECRET_KEY
        sync: false
      - key: JWT_REFRESH_SECRET
        sync: false
    healthCheckPath: "/_stcore/health"

  # Service 2: Phoenix CV - G√©n√©rateur CV IA  
  - type: web
    name: phoenix-cv
    env: docker
    dockerfilePath: ./Dockerfile
    dockerBuildArgs:
      - APP_NAME=phoenix-cv
    plan: starter
    envVars:
      # Partage les m√™mes variables que Letters
      - fromService: phoenix-letters
        name: GOOGLE_API_KEY
      - fromService: phoenix-letters
        name: SUPABASE_URL
      - fromService: phoenix-letters
        name: SUPABASE_ANON_KEY
      # Variables sp√©cifiques CV
      - key: STRIPE_CV_PRICE_ID
        sync: false
    healthCheckPath: "/_stcore/health"

  # Service 3: Phoenix Website - Landing page Next.js
  - type: web
    name: phoenix-website
    env: docker
    dockerfilePath: ./apps/phoenix-website/Dockerfile
    plan: free
    envVars:
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      - key: NEXT_PUBLIC_API_URL
        value: https://phoenix-backend-unified.onrender.com

  # ===========================================
  # API SERVICES (Backend APIs)
  # ===========================================

  # Service 4: Phoenix Backend Unifi√© - API centrale
  - type: web
    name: phoenix-backend-unified
    env: docker
    dockerfilePath: ./Dockerfile
    dockerBuildArgs:
      - APP_NAME=phoenix-backend-unified
    plan: starter
    envVars:
      - fromService: phoenix-letters
        name: SUPABASE_URL
      - fromService: phoenix-letters
        name: SUPABASE_SERVICE_ROLE_KEY
      - fromService: phoenix-letters
        name: JWT_SECRET_KEY
      - key: ALLOWED_ORIGINS
        value: "https://phoenix-aube.vercel.app,https://phoenix-rise.vercel.app"
      - key: ENVIRONMENT
        value: "production"
    healthCheckPath: "/health"

  # Service 5: Phoenix Iris API - Assistant IA
  - type: web
    name: phoenix-iris-api
    env: docker
    dockerfilePath: ./Dockerfile
    dockerBuildArgs:
      - APP_NAME=phoenix-iris-api
    plan: starter
    envVars:
      - fromService: phoenix-letters
        name: GOOGLE_API_KEY
      - fromService: phoenix-letters
        name: SUPABASE_URL
      - fromService: phoenix-letters
        name: SUPABASE_SERVICE_ROLE_KEY
      - key: OPENAI_API_KEY
        sync: false
    healthCheckPath: "/health"

  # ===========================================
  # BACKGROUND WORKERS (Services backend)
  # ===========================================

  # Service 6: Event Bridge - Processeur d'√©v√©nements
  - type: worker
    name: phoenix-event-bridge
    env: docker
    dockerfilePath: ./infrastructure/Dockerfile.worker
    dockerBuildArgs:
      - WORKER_TYPE=event_bridge
    plan: free
    envVars:
      - fromService: phoenix-letters
        name: SUPABASE_URL
      - fromService: phoenix-letters  
        name: SUPABASE_SERVICE_ROLE_KEY
      - key: ENABLE_EVENT_PROCESSING
        value: "true"
      - key: WORKER_TYPE
        value: "event_bridge"

  # Service 7: User Profile Service - Gestion profils
  - type: worker  
    name: phoenix-user-profile
    env: docker
    dockerfilePath: ./infrastructure/Dockerfile.worker
    dockerBuildArgs:
      - WORKER_TYPE=user_profile
    plan: free
    envVars:
      - fromService: phoenix-letters
        name: SUPABASE_URL
      - fromService: phoenix-letters
        name: SUPABASE_SERVICE_ROLE_KEY
      - key: WORKER_TYPE
        value: "user_profile"

  # Service 8: Agents IA - Smart Router & Security Guardian
  - type: web
    name: phoenix-agents-ai
    env: docker
    dockerfilePath: ./Dockerfile
    dockerBuildArgs:
      - APP_NAME=../agent_ia
    plan: starter
    envVars:
      - fromService: phoenix-letters
        name: GOOGLE_API_KEY
      - key: MAX_RESPONSE_TIME
        value: "30"
      - key: ENABLE_CLOUD_FALLBACK
        value: "true"
    healthCheckPath: "/health"

  # ===========================================
  # DATABASES & EXTERNAL SERVICES
  # ===========================================
  
databases:
  # Supabase externe - pas de config n√©cessaire ici
  # Les variables SUPABASE_* pointent vers votre instance

  # Redis pour cache (optionnel)
  - name: phoenix-redis
    plan: free
    # Sera accessible via REDIS_URL automatiquement

# ===========================================
# CONFIGURATION GLOBALE
# ===========================================

# Variables partag√©es par tous les services
envVars:
  - key: PYTHON_ENV
    value: "production"
  - key: ENABLE_MONITORING
    value: "true"
  - key: LOG_LEVEL
    value: "INFO"